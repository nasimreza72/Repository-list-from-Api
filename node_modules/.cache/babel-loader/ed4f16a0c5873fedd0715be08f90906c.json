{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/fbw-e07-spa-boilerplate-minireact-nasimreza72/src/index.js\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 18\n}, this), document.querySelector(\"#root\"));\nconst inputUserName = document.querySelector(\"input\");\nconst submitButton = document.querySelector(\"button\");\ninputUserName.addEventListener(\"change\", e => {\n  console.log(e);\n});\n\nasync function gitData() {\n  const inputUserName = document.querySelector(\"input\");\n  const submitButton = document.querySelector(\"button\");\n  inputUserName.addEventListener(\"change\", e => {\n    console.log(e);\n  });\n  const res = await fetch(\"https://api.github.com/users/\" + inputUserName + \"/repos\");\n  const result = await res.json().then(result => result.forEach(element => {\n    let duration = moment(element.created_at, \"YYYY-MM-DD\").fromNow();\n    console.log(element.name, \"-         -\", duration);\n    const reponame1 = document.createElement(\"p\");\n    reponame1.append(element.name);\n    const reponame2 = document.createElement(\"p\");\n    reponame2.append(duration);\n    const div2 = document.createElement(\"section\");\n    div2.append(reponame1, reponame2);\n    div2.style.display = \"flex\";\n    div2.style.width = \"30vw\";\n    div2.style.justifyContent = \"space-between\";\n    div2.style.border = \"1px solid gray\";\n    div2.style.margin = \"1px\";\n    div2.style.padding = \"5px\";\n    reponame1.style.fontWeight = \"bolder\";\n    document.querySelector(\"#post\").append(div2);\n  }));\n}\n\ngitData();","map":{"version":3,"sources":["/home/user/Desktop/fbw-e07-spa-boilerplate-minireact-nasimreza72/src/index.js"],"names":["ReactDOM","App","moment","render","document","querySelector","inputUserName","submitButton","addEventListener","e","console","log","gitData","res","fetch","result","json","then","forEach","element","duration","created_at","fromNow","name","reponame1","createElement","append","reponame2","div2","style","display","width","justifyContent","border","margin","padding","fontWeight"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAIAF,QAAQ,CAACG,MAAT,eAAiB,QAAE,GAAF;AAAA;AAAA;AAAA;AAAA,QAAjB,EAA6BC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAA7B;AAGA,MAAMC,aAAa,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAtB;AACA,MAAME,YAAY,GAAGH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAArB;AAEAC,aAAa,CAACE,gBAAd,CAA+B,QAA/B,EAAyCC,CAAC,IAAG;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACF,CAFD;;AAMA,eAAeG,OAAf,GAAyB;AAEzB,QAAMN,aAAa,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAtB;AACA,QAAME,YAAY,GAAGH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAArB;AAEAC,EAAAA,aAAa,CAACE,gBAAd,CAA+B,QAA/B,EAAyCC,CAAC,IAAG;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACF,GAFD;AAOI,QAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAiCR,aAAjC,GAAgD,QAAjD,CAAvB;AACA,QAAMS,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,GAChBC,IADgB,CACXF,MAAM,IAAIA,MAAM,CAACG,OAAP,CAAeC,OAAO,IAAI;AACtC,QAAIC,QAAQ,GAAGlB,MAAM,CAACiB,OAAO,CAACE,UAAT,EAAqB,YAArB,CAAN,CAAyCC,OAAzC,EAAf;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAO,CAACI,IAApB,EAA0B,aAA1B,EAAyCH,QAAzC;AAEA,UAAMI,SAAS,GAAGpB,QAAQ,CAACqB,aAAT,CAAuB,GAAvB,CAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiBP,OAAO,CAACI,IAAzB;AAEA,UAAMI,SAAS,GAAGvB,QAAQ,CAACqB,aAAT,CAAuB,GAAvB,CAAlB;AACAE,IAAAA,SAAS,CAACD,MAAV,CAAiBN,QAAjB;AAEA,UAAMQ,IAAI,GAAGxB,QAAQ,CAACqB,aAAT,CAAuB,SAAvB,CAAb;AACAG,IAAAA,IAAI,CAACF,MAAL,CAAYF,SAAZ,EAAuBG,SAAvB;AAEAC,IAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACAF,IAAAA,IAAI,CAACC,KAAL,CAAWE,KAAX,GAAmB,MAAnB;AACAH,IAAAA,IAAI,CAACC,KAAL,CAAWG,cAAX,GAA4B,eAA5B;AACAJ,IAAAA,IAAI,CAACC,KAAL,CAAWI,MAAX,GAAoB,gBAApB;AACAL,IAAAA,IAAI,CAACC,KAAL,CAAWK,MAAX,GAAoB,KAApB;AACAN,IAAAA,IAAI,CAACC,KAAL,CAAWM,OAAX,GAAqB,KAArB;AAEAX,IAAAA,SAAS,CAACK,KAAV,CAAgBO,UAAhB,GAA6B,QAA7B;AAEAhC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCqB,MAAhC,CAAuCE,IAAvC;AAEH,GAxBe,CADC,CAArB;AA0BH;;AAEDhB,OAAO","sourcesContent":["import ReactDOM from \"react-dom\"\nimport App from \"./App.jsx\"\nimport moment from 'moment'\n\n\n\nReactDOM.render( < App / > , document.querySelector(\"#root\"))\n\n\nconst inputUserName = document.querySelector(\"input\")\nconst submitButton = document.querySelector(\"button\")\n\ninputUserName.addEventListener(\"change\", e =>{\n   console.log(e);\n})\n\n\n\nasync function gitData() {\n\nconst inputUserName = document.querySelector(\"input\")\nconst submitButton = document.querySelector(\"button\")\n\ninputUserName.addEventListener(\"change\", e =>{\n   console.log(e);\n})\n\n\n\n\n    const res = await fetch(\"https://api.github.com/users/\"+ inputUserName +\"/repos\");\n    const result = await res.json()\n        .then(result => result.forEach(element => {\n            let duration = moment(element.created_at, \"YYYY-MM-DD\").fromNow();\n            console.log(element.name, \"-         -\", duration);\n\n            const reponame1 = document.createElement(\"p\")\n            reponame1.append(element.name);\n\n            const reponame2 = document.createElement(\"p\")\n            reponame2.append(duration);\n\n            const div2 = document.createElement(\"section\")\n            div2.append(reponame1, reponame2);\n\n            div2.style.display = \"flex\"\n            div2.style.width = \"30vw\"\n            div2.style.justifyContent = \"space-between\"\n            div2.style.border = \"1px solid gray\"\n            div2.style.margin = \"1px\"\n            div2.style.padding = \"5px\"\n\n            reponame1.style.fontWeight = \"bolder\"\n\n            document.querySelector(\"#post\").append(div2);\n\n        }))\n}\n\ngitData()"]},"metadata":{},"sourceType":"module"}